// Code generated by protoc-gen-go.
// source: github.com/micro/router-srv/proto/rule/rule.proto
// DO NOT EDIT!

/*
Package go_micro_srv_router_rule is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/router-srv/proto/rule/rule.proto

It has these top-level messages:
	RuleSet
	ReadRequest
	ReadResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package go_micro_srv_router_rule

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RuleSet struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// service name
	Service string `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
	// service version
	Version string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	// weight between 0 and 100
	// 0 removes the key-value from all nodes
	// 100 adds the key-value to all nodes
	Weight int64 `protobuf:"varint,4,opt,name=weight" json:"weight,omitempty"`
	// optional: priority of this rule
	// 0 is highest
	Priority int64 `protobuf:"varint,5,opt,name=priority" json:"priority,omitempty"`
	// label name
	Key string `protobuf:"bytes,6,opt,name=key" json:"key,omitempty"`
	// label value
	Value string `protobuf:"bytes,7,opt,name=value" json:"value,omitempty"`
}

func (m *RuleSet) Reset()                    { *m = RuleSet{} }
func (m *RuleSet) String() string            { return proto.CompactTextString(m) }
func (*RuleSet) ProtoMessage()               {}
func (*RuleSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReadResponse struct {
	Rule *RuleSet `protobuf:"bytes,1,opt,name=rule" json:"rule,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadResponse) GetRule() *RuleSet {
	if m != nil {
		return m.Rule
	}
	return nil
}

type CreateRequest struct {
	Rule *RuleSet `protobuf:"bytes,1,opt,name=rule" json:"rule,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRequest) GetRule() *RuleSet {
	if m != nil {
		return m.Rule
	}
	return nil
}

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UpdateRequest struct {
	Rule *RuleSet `protobuf:"bytes,1,opt,name=rule" json:"rule,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetRule() *RuleSet {
	if m != nil {
		return m.Rule
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SearchRequest struct {
	// optional params
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Limit   int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset  int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type SearchResponse struct {
	Rules []*RuleSet `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SearchResponse) GetRules() []*RuleSet {
	if m != nil {
		return m.Rules
	}
	return nil
}

func init() {
	proto.RegisterType((*RuleSet)(nil), "go.micro.srv.router.rule.RuleSet")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.router.rule.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.router.rule.ReadResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.router.rule.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.router.rule.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.router.rule.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.router.rule.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.router.rule.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.router.rule.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.router.rule.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.router.rule.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Rule service

type RuleClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type ruleClient struct {
	c           client.Client
	serviceName string
}

func NewRuleClient(serviceName string, c client.Client) RuleClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.router.rule"
	}
	return &ruleClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *ruleClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Rule.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Rule.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Rule.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Rule.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Rule.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Rule service

type RuleHandler interface {
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterRuleHandler(s server.Server, hdlr RuleHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Rule{hdlr}, opts...))
}

type Rule struct {
	RuleHandler
}

func (h *Rule) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.RuleHandler.Read(ctx, in, out)
}

func (h *Rule) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.RuleHandler.Create(ctx, in, out)
}

func (h *Rule) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.RuleHandler.Update(ctx, in, out)
}

func (h *Rule) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.RuleHandler.Delete(ctx, in, out)
}

func (h *Rule) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.RuleHandler.Search(ctx, in, out)
}

func init() { proto.RegisterFile("github.com/micro/router-srv/proto/rule/rule.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x8e, 0xd3, 0x30,
	0x14, 0x85, 0x27, 0x4d, 0x9b, 0xc2, 0x1d, 0x5a, 0x8d, 0x2c, 0x84, 0xac, 0x4a, 0x08, 0x88, 0x04,
	0xcc, 0x06, 0x57, 0x0c, 0x42, 0x3c, 0x00, 0x3f, 0x12, 0xdb, 0x8c, 0x10, 0x2b, 0x16, 0x99, 0xf4,
	0xb6, 0xb5, 0x48, 0xeb, 0xd4, 0x76, 0x82, 0xfa, 0x48, 0x3c, 0x13, 0x2f, 0x83, 0x7f, 0x92, 0xb6,
	0x29, 0x6a, 0x8a, 0x10, 0x9b, 0x19, 0x5f, 0xdf, 0x73, 0x3f, 0xc7, 0x3e, 0x47, 0x85, 0xd7, 0x0b,
	0xae, 0x97, 0xe5, 0x1d, 0xcb, 0xc4, 0x6a, 0xba, 0xe2, 0x99, 0x14, 0x53, 0x29, 0x4a, 0x8d, 0xf2,
	0x95, 0x92, 0xd5, 0xb4, 0x90, 0x42, 0x9b, 0x8d, 0x32, 0x47, 0xf7, 0x87, 0xb9, 0x9a, 0xd0, 0x85,
	0x60, 0x4e, 0xca, 0x8c, 0x86, 0x79, 0x39, 0xb3, 0xfd, 0xf8, 0x67, 0x00, 0xc3, 0xc4, 0x2c, 0x6e,
	0x51, 0x93, 0x31, 0xf4, 0xf8, 0x8c, 0x06, 0x4f, 0x83, 0xeb, 0xfb, 0x89, 0x59, 0x11, 0x0a, 0x43,
	0x85, 0xb2, 0xe2, 0x19, 0xd2, 0x9e, 0xdb, 0x6c, 0x4a, 0xdb, 0xa9, 0x50, 0x2a, 0x2e, 0xd6, 0x34,
	0xf4, 0x9d, 0xba, 0x24, 0x8f, 0x20, 0xfa, 0x81, 0x7c, 0xb1, 0xd4, 0xb4, 0x6f, 0x1a, 0x61, 0x52,
	0x57, 0x64, 0x02, 0xf7, 0x0a, 0xc9, 0x85, 0xe4, 0x7a, 0x4b, 0x07, 0xae, 0xb3, 0xab, 0xc9, 0x15,
	0x84, 0xdf, 0x71, 0x4b, 0x23, 0x47, 0xb2, 0x4b, 0xf2, 0x10, 0x06, 0x55, 0x9a, 0x97, 0x48, 0x87,
	0x6e, 0xcf, 0x17, 0xf1, 0x63, 0xb8, 0x4c, 0x30, 0x9d, 0x25, 0xb8, 0x29, 0x51, 0xfd, 0xf1, 0xb9,
	0xf1, 0x47, 0x78, 0xe0, 0xdb, 0xaa, 0x10, 0x6b, 0x85, 0xe4, 0x2d, 0xf4, 0xed, 0x15, 0x9d, 0xe2,
	0xf2, 0xe6, 0x19, 0x3b, 0xf5, 0x06, 0xac, 0xbe, 0x7f, 0xe2, 0xe4, 0xf1, 0x27, 0x18, 0xbd, 0x97,
	0x98, 0x6a, 0x6c, 0xce, 0xf9, 0x47, 0xce, 0x15, 0x8c, 0x1b, 0x8e, 0xff, 0x20, 0x4b, 0xfe, 0x52,
	0xcc, 0xfe, 0x0b, 0xb9, 0xe1, 0xd4, 0xe4, 0x27, 0x30, 0xfa, 0x80, 0x39, 0xee, 0xc9, 0xc7, 0x6f,
	0x63, 0x46, 0x1a, 0x41, 0x3d, 0xb2, 0x81, 0xd1, 0x2d, 0xa6, 0x32, 0x5b, 0x36, 0x23, 0x07, 0x6e,
	0x07, 0x27, 0xdd, 0xee, 0xb5, 0xdd, 0x36, 0x3e, 0xe5, 0x7c, 0xc5, 0xb5, 0x4b, 0x41, 0x98, 0xf8,
	0xc2, 0x66, 0x40, 0xcc, 0xe7, 0x0a, 0x77, 0x19, 0xf0, 0x55, 0xfc, 0x19, 0xc6, 0xcd, 0x91, 0xb5,
	0x45, 0xef, 0x60, 0x60, 0x6f, 0xa4, 0xcc, 0x89, 0xe1, 0xdf, 0xbd, 0x80, 0xd7, 0xdf, 0xfc, 0x0a,
	0xa1, 0x6f, 0xb7, 0xc8, 0x57, 0xf3, 0xdf, 0x98, 0x4e, 0x9e, 0x77, 0x8c, 0xee, 0x33, 0x33, 0x79,
	0x71, 0x4e, 0x56, 0xbf, 0xce, 0x05, 0xf9, 0x06, 0x91, 0xb7, 0x8f, 0xbc, 0x3c, 0x3d, 0xd3, 0x0a,
	0xca, 0xe4, 0xfa, 0xbc, 0xf0, 0x10, 0xef, 0x3d, 0xec, 0xc2, 0xb7, 0xd2, 0xd2, 0x85, 0x3f, 0x8a,
	0x83, 0xc3, 0x7b, 0xbf, 0xbb, 0xf0, 0xad, 0xc8, 0x74, 0xe1, 0x8f, 0xa2, 0xe3, 0xf0, 0xde, 0xc9,
	0x2e, 0x7c, 0x2b, 0x5e, 0x5d, 0xf8, 0x76, 0x28, 0xe2, 0x8b, 0xbb, 0xc8, 0xfd, 0x6a, 0xbd, 0xf9,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x2d, 0x31, 0x11, 0xea, 0x04, 0x00, 0x00,
}
